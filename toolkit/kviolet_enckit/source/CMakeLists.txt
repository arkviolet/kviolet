#
# 项目名
#
IF(CMAKE_BUILD_TYPE STREQUAL Debug)
	SET(PROGRAM_NAME kviolet_enckitd)
	SET(PROGRAM_NAME_SHARE kviolet_enckitd)
	SET(PROGRAM_NAME_STATIC kviolet_enckit_static)

ELSE()
	SET(PROGRAM_NAME kviolet_enckit)
	SET(PROGRAM_NAME_SHARE kviolet_enckit)
	SET(PROGRAM_NAME_STATIC kviolet_enckit_static)
ENDIF()

#
# 设置库文件生成目录
#
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

#
# 遍历递归当前目录获取源文件
#
RECURSE_CURRENT_DIRECTORY_SOURCE_FILE(SOURCE_FILES)

#
# 链接源文件, 生成库文件
#
ADD_LIBRARY(${PROGRAM_NAME_SHARE} SHARED ${SOURCE_FILES})
ADD_LIBRARY(${PROGRAM_NAME_STATIC} STATIC ${SOURCE_FILES})

#
# 链接第三方头文件
#
INCLUDE_DIRECTORIES(AFTER SYSTEM /usr/include/glib-2.0)
INCLUDE_DIRECTORIES(AFTER SYSTEM /usr/include/gstreamer-1.0)
INCLUDE_DIRECTORIES(AFTER SYSTEM /usr/lib/x86_64-linux-gnu/glib-2.0/include/)

#
# 链接第三方库
#
TARGET_LINK_LIBRARIES(${PROGRAM_NAME_SHARE} PUBLIC fmt kviolet glog pulse sndfile glib-2.0 gstreamer-1.0 curl sdbus-c++ grpc++ grpc++_reflection protobuf)
TARGET_LINK_LIBRARIES(${PROGRAM_NAME_STATIC} PUBLIC fmt kviolet glog pulse sndfile glib-2.0 gstreamer-1.0 curl sdbus-c++ grpc++ grpc++_reflection protobuf)

#
# 指定输出名称
#
SET_TARGET_PROPERTIES(${PROGRAM_NAME_SHARE} PROPERTIES OUTPUT_NAME ${PROGRAM_NAME})
SET_TARGET_PROPERTIES(${PROGRAM_NAME_STATIC} PROPERTIES OUTPUT_NAME ${PROGRAM_NAME})

#
# 使动态库和静态库同时存在
#
SET_TARGET_PROPERTIES(${PROGRAM_NAME_SHARE} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
SET_TARGET_PROPERTIES(${PROGRAM_NAME_STATIC} PROPERTIES CLEAN_DIRECT_OUTPUT 1)

#
# 安装库文件
#
INSTALL(TARGETS ${PROGRAM_NAME_SHARE} ${PROGRAM_NAME_STATIC}
	LIBRARY DESTINATION ${LIBRARY_INSTALL_PREFIX}
	ARCHIVE DESTINATION ${LIBRARY_INSTALL_PREFIX})

#
# 遍历递归指定目录安装头文件
#
TRAVERSE_INSTALL_INCLUDE(fmt ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/fmt)
TRAVERSE_INSTALL_INCLUDE(dbus ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/dbus)
TRAVERSE_INSTALL_INCLUDE(grpc ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/grpc)
TRAVERSE_INSTALL_INCLUDE(http_client ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/http_client)
TRAVERSE_INSTALL_INCLUDE(speaker_gst ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/speaker_gst)
TRAVERSE_INSTALL_INCLUDE(speaker_pulseaudio ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/speaker_pulseaudio)
TRAVERSE_INSTALL_INCLUDE(${CMAKE_CURRENT_LIST_DIR} ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME})
