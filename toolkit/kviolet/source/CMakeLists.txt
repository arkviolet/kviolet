#
# 项目名
#
IF(CMAKE_BUILD_TYPE STREQUAL Debug)
        SET(PROGRAM_NAME kvioletd)
        SET(PROGRAM_NAME_SHARE kvioletd)
        SET(PROGRAM_NAME_STATIC kvioletd_static)

ELSE()
        SET(PROGRAM_NAME kviolet)
        SET(PROGRAM_NAME_SHARE kviolet)
        SET(PROGRAM_NAME_STATIC kviolet_static)
ENDIF()

#
# 设置库文件生成目录
#
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR}/lib)

#
# 遍历递归当前目录获取源文件
#
RECURSE_CURRENT_DIRECTORY_SOURCE_FILE(SOURCE_FILES)

#
# 链接源文件, 生成库文件
#
ADD_LIBRARY(${PROGRAM_NAME_SHARE} SHARED ${SOURCE_FILES})
ADD_LIBRARY(${PROGRAM_NAME_STATIC} STATIC ${SOURCE_FILES})

#
# 指定输出名称
#
SET_TARGET_PROPERTIES(${PROGRAM_NAME_SHARE} PROPERTIES OUTPUT_NAME ${PROGRAM_NAME})
SET_TARGET_PROPERTIES(${PROGRAM_NAME_STATIC} PROPERTIES OUTPUT_NAME ${PROGRAM_NAME})

#
# 使动态库和静态库同时存在
#
SET_TARGET_PROPERTIES(${PROGRAM_NAME_SHARE} PROPERTIES CLEAN_DIRECT_OUTPUT 1)
SET_TARGET_PROPERTIES(${PROGRAM_NAME_STATIC} PROPERTIES CLEAN_DIRECT_OUTPUT 1)

#
# 安装库文件
#
INSTALL(TARGETS ${PROGRAM_NAME_SHARE} ${PROGRAM_NAME_STATIC}
        LIBRARY DESTINATION ${LIBRARY_INSTALL_PREFIX}
        ARCHIVE DESTINATION ${LIBRARY_INSTALL_PREFIX})

#
# 遍历递归指定目录安装头文件
#
TRAVERSE_INSTALL_INCLUDE(net ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/net)
TRAVERSE_INSTALL_INCLUDE(poll ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/poll)
TRAVERSE_INSTALL_INCLUDE(debug ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/debug)
TRAVERSE_INSTALL_INCLUDE(timer ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/timer)
TRAVERSE_INSTALL_INCLUDE(actor ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/actor)
TRAVERSE_INSTALL_INCLUDE(module ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/module)
TRAVERSE_INSTALL_INCLUDE(system ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/system)
TRAVERSE_INSTALL_INCLUDE(common ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/common)
TRAVERSE_INSTALL_INCLUDE(efficient ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/efficient)
TRAVERSE_INSTALL_INCLUDE(utilities ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/utilities)
TRAVERSE_INSTALL_INCLUDE(message_queue ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/message_queue)
TRAVERSE_INSTALL_INCLUDE(lock_container ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME}/lock_container)
TRAVERSE_INSTALL_INCLUDE(${CMAKE_CURRENT_LIST_DIR} ${INCLUDE_INSTALL_PREFIX}/${PROGRAM_NAME})
